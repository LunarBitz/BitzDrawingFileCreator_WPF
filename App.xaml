<Application x:Class="BitzDrawingFileCreator_WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BitzDrawingFileCreator_WPF"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <!-- Logo Style -->
        <Style x:Key="bitzMenuLogo" TargetType="{x:Type StackPanel}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource themeclr_MenuLogo_Background_Primary}"/>
                        <GradientStop Offset="1" Color="{DynamicResource themeclr_MenuLogo_Background_Secondary}"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button Style -->
        <Style x:Key="bitzButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource themeclr_Button_Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource themeclr_Button_Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource themeclr_Button_Text}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource themeclr_Button_Selected}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource themeclr_Button_Hover}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource themeclr_Button_Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource themeclr_Button_Clicked}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource themeclr_Button_Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource themeclr_Button_Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource themeclr_Button_Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Menu Style -->
        <Style x:Key="bitzMenu" TargetType="{x:Type StackPanel}">
            <Setter Property="Background" Value="{DynamicResource themeclr_Menu_Background}"/>
        </Style>

        <!-- Menu Option Style -->
        <Style x:Key="bitzMenuOption" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>

            <Setter Property="Foreground" Value="{DynamicResource themeclr_MenuOption_Text}"/>
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontStyle" Value="Normal" />
            <Setter Property="Padding" Value="32, 0, 0, 0"/>
            
            <Setter Property="Background" Value="{DynamicResource themeclr_MenuOption_Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource themeclr_MenuOption_Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource themeclr_MenuOption_Selected}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource themeclr_MenuOption_Hover}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource themeclr_MenuOption_Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource themeclr_MenuOption_Clicked}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource themeclr_MenuOption_Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource themeclr_MenuOption_Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource themeclr_MenuOption_Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Sub-Menu Style -->
        <Style x:Key="bitzSubMenu" TargetType="{x:Type StackPanel}">
            <Setter Property="Background" Value="{DynamicResource themeclr_SubMenu_Background}"/>
            <Setter Property="Margin" Value="4, 4, 4, 4"/>
        </Style>

        <!-- Sub-Menu Option Style -->
        <Style x:Key="bitzSubMenuOption" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>

            <Setter Property="Foreground" Value="{DynamicResource themeclr_SubMenuOption_Text}"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontStyle" Value="Italic" />
            <Setter Property="Padding" Value="64, 0, 0, 0"/>

            <Setter Property="Background" Value="{DynamicResource themeclr_SubMenuOption_Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource themeclr_SubMenuOption_Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource themeclr_SubMenuOption_Selected}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource themeclr_SubMenuOption_Hover}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource themeclr_SubMenuOption_Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource themeclr_SubMenuOption_Clicked}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource themeclr_SubMenuOption_Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource themeclr_SubMenuOption_Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource themeclr_SubMenuOption_Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
